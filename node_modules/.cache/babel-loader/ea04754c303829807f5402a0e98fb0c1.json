{"ast":null,"code":"var _jsxFileName = \"/home/Tiresia/React nanoDegree/my-reads/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport BookShelf from \"./Bookshelf\";\nimport Header from \"./Header\";\nimport Search from \"./Search\";\nimport Button from \"./Button\";\nimport Library from \"./Library\";\nimport { Route } from \"react-router\";\nimport Aux from \"./Aux\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      query: \"\"\n    };\n\n    this.updateQuery = query => {\n      this.setState(() => ({\n        query: query.trim()\n      }));\n    };\n\n    this.clearQuery = () => {\n      this.updateQuery(\"\");\n    };\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll().then(books => this.setState(() => ({\n      books\n    })));\n  }\n\n  render() {\n    const {\n      books,\n      query\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/store\",\n        render: () => /*#__PURE__*/_jsxDEV(Library, {\n          books: this.state.books,\n          query: this.state.query,\n          onUpdateQuery: this.updateQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => /*#__PURE__*/_jsxDEV(Aux, {\n          children: /*#__PURE__*/_jsxDEV(BookShelf, {\n            onUpdateQuery: this.updateQuery,\n            query: this.state.query,\n            books: this.state.books\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/Tiresia/React nanoDegree/my-reads/src/App.js"],"names":["React","Component","BookShelf","Header","Search","Button","Library","Route","Aux","BooksAPI","App","state","books","query","updateQuery","setState","trim","clearQuery","componentDidMount","getAll","then","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBU,KADwB,GAChB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,KAAK,EAAE;AAFH,KADgB;;AAAA,SAcxBC,WAdwB,GAcTD,KAAD,IAAW;AACrB,WAAKE,QAAL,CAAc,OAAO;AACjBF,QAAAA,KAAK,EAAEA,KAAK,CAACG,IAAN;AADU,OAAP,CAAd;AAGH,KAlBuB;;AAAA,SAoBxBC,UApBwB,GAoBX,MAAM;AACf,WAAKH,WAAL,CAAiB,EAAjB;AACH,KAtBuB;AAAA;;AAMxBI,EAAAA,iBAAiB,GAAG;AAChBT,IAAAA,QAAQ,CAACU,MAAT,GAAkBC,IAAlB,CAAwBR,KAAD,IACnB,KAAKG,QAAL,CAAc,OAAO;AACjBH,MAAAA;AADiB,KAAP,CAAd,CADJ;AAKH;;AAWDS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,KAAKF,KAA9B;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,KAAK,MADT;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,MAAM,EAAE,mBACJ,QAAC,OAAD;AACI,UAAA,KAAK,EAAE,KAAKA,KAAL,CAAWC,KADtB;AAEI,UAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFtB;AAGI,UAAA,aAAa,EAAE,KAAKC;AAHxB;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI,QAAC,KAAD;AACI,QAAA,KAAK,MADT;AAEI,QAAA,IAAI,EAAC,GAFT;AAGI,QAAA,MAAM,EAAE,mBACJ,QAAC,GAAD;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,aAAa,EAAE,KAAKA,WADxB;AAEI,YAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,KAFtB;AAGI,YAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC;AAHtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cAbJ,eA4BI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgCH;;AA1DuB;;AA6D5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport BookShelf from \"./Bookshelf\";\nimport Header from \"./Header\";\nimport Search from \"./Search\";\nimport Button from \"./Button\";\nimport Library from \"./Library\";\nimport { Route } from \"react-router\";\nimport Aux from \"./Aux\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nclass App extends Component {\n    state = {\n        books: [],\n        query: \"\",\n    };\n\n    componentDidMount() {\n        BooksAPI.getAll().then((books) =>\n            this.setState(() => ({\n                books,\n            }))\n        );\n    }\n\n    updateQuery = (query) => {\n        this.setState(() => ({\n            query: query.trim(),\n        }));\n    };\n\n    clearQuery = () => {\n        this.updateQuery(\"\");\n    };\n    render() {\n        const { books, query } = this.state;\n\n        return (\n            <div className='App'>\n                <Route\n                    exact\n                    path='/store'\n                    render={() => (\n                        <Library\n                            books={this.state.books}\n                            query={this.state.query}\n                            onUpdateQuery={this.updateQuery}\n\n                        />\n                    )}\n                />\n                <Route\n                    exact\n                    path='/'\n                    render={() => (\n                        <Aux>\n                            <BookShelf\n                                onUpdateQuery={this.updateQuery}\n                                query={this.state.query}\n                                books={this.state.books}\n\n                            />\n                        </Aux>\n                    )}\n                />\n\n                <Button />\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}