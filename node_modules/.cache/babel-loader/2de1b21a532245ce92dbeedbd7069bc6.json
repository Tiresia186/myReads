{"ast":null,"code":"var _jsxFileName = \"/home/Tiresia/React nanoDegree/my-reads/src/Bookshelf.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"./Aux\";\nimport Shelf from \"./Shelf\";\nimport Styles from \"./css/main.module.css\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Search from './Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BookShelf extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: []\n    };\n\n    this.shelfUpdate = (book, shelfName) => {\n      const {\n        books\n      } = this.state;\n      const updateIndex = books.findIndex(b => b.id === book.id);\n      const updateBook = books[updateIndex];\n      updateBook.shelf = shelfName;\n      BooksAPI.update(book, shelfName).then(() => {\n        this.setState({\n          books: [...books.slice(0, updateIndex), updateBook, ...books.slice(updateIndex + 1)]\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll().then(books => this.setState(() => ({\n      books\n    })));\n  }\n\n  render() {\n    const {\n      bookShelf,\n      books\n    } = this.state;\n    const {\n      query,\n      onUpdateQuery\n    } = this.props;\n    const showingBooks = query === \"\" ? books : books.filter(b => b.title.toLowerCase().includes(query.toLowerCase()));\n    const shelves = [{\n      name: \"Read\",\n      books: showingBooks.filter(b => b.shelf === \"read\")\n    }, {\n      name: \"Current Reading\",\n      books: showingBooks.filter(b => b.shelf === \"currentlyReading\")\n    }, {\n      name: \"Want To Read\",\n      books: showingBooks.filter(b => b.shelf === \"wantToRead\")\n    }];\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [console.log(books), /*#__PURE__*/_jsxDEV(Search, {\n        onUpdateQuery: onUpdateQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: Styles.bookShelf,\n        children: shelves && shelves.map(s => /*#__PURE__*/_jsxDEV(Shelf, {\n          title: s.name,\n          books: s.books,\n          onShelfUpdate: this.shelfUpdate\n        }, s.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BookShelf;","map":{"version":3,"sources":["/home/Tiresia/React nanoDegree/my-reads/src/Bookshelf.js"],"names":["React","Component","Aux","Shelf","Styles","Book","BooksAPI","Search","BookShelf","state","books","shelfUpdate","book","shelfName","updateIndex","findIndex","b","id","updateBook","shelf","update","then","setState","slice","componentDidMount","getAll","render","bookShelf","query","onUpdateQuery","props","showingBooks","filter","title","toLowerCase","includes","shelves","name","console","log","map","s"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from \"./Aux\";\nimport Shelf from \"./Shelf\";\nimport Styles from \"./css/main.module.css\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Search from './Search';\n\nclass BookShelf extends Component {\n    state = {\n        books: [],\n    };\n\n    componentDidMount() {\n        BooksAPI.getAll().then((books) =>\n            this.setState(() => ({\n                books,\n            }))\n        );\n    }\n    shelfUpdate=(book, shelfName) =>{\n        const {books} = this.state;\n        const updateIndex = books.findIndex(b=> b.id === book.id)\n        const updateBook= books[updateIndex]\n        updateBook.shelf= shelfName\n\n       \n\n        BooksAPI.update(book, shelfName).then(()=>{\n            this.setState({\n                books: [...books.slice(0, updateIndex), updateBook , ...books.slice(updateIndex + 1)]\n    \n            })\n            \n        })\n    }\n    render() {\n        const { bookShelf, books } = this.state;\n        const { query, onUpdateQuery} = this.props\n        const showingBooks =\n            query === \"\"\n                ? books\n                : books.filter((b) =>\n                      b.title.toLowerCase().includes(query.toLowerCase())\n                  );\n      \n        const shelves = [\n            {\n                name: \"Read\",\n                books: showingBooks.filter((b) => b.shelf === \"read\"),\n            },\n            {\n                name: \"Current Reading\",\n                books: showingBooks.filter((b) => b.shelf === \"currentlyReading\"),\n            },\n            {\n                name: \"Want To Read\",\n                books: showingBooks.filter((b) => b.shelf === \"wantToRead\"),\n            },\n        ];\n        \n\n        return (\n            <Aux>\n                {console.log(books)}\n                <Search onUpdateQuery={onUpdateQuery} />\n\n                <ul className={Styles.bookShelf}>\n                    {shelves &&\n                        shelves.map((s) => (\n                            <Shelf key={s.name} title={s.name} books={s.books} onShelfUpdate={this.shelfUpdate} />\n                        ))}\n                </ul>\n            </Aux>\n        );\n    }\n}\n\nexport default BookShelf;\n"]},"metadata":{},"sourceType":"module"}