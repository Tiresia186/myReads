{"ast":null,"code":"var _jsxFileName = \"/home/Tiresia/React nanoDegree/my-reads/src/Library.js\";\nimport React, { Component } from \"react\";\nimport Styles from \"./css/main.module.css\";\nimport Aux from \"./Aux\";\nimport Search from \"./Search\";\nimport Book from \"./Book\";\nimport Button from \"./Button\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { render } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Library extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      shelfChange: false,\n      flag: true,\n      query: \"\"\n    };\n\n    this.updateQuery = query => {\n      this.setState(() => ({\n        query: query.trim()\n      }));\n    };\n\n    this.clearQuery = () => {\n      this.updateQuery(\"\");\n    };\n\n    this.checkShelf = (currentShelf, nextShelf) => {\n      currentShelf === nextShelf ? this.setState(() => ({\n        flag: false\n      })) && setTimeout(() => {\n        this.setState(currentState => ({\n          flag: true\n        }));\n      }, 1500) : this.setState(() => ({\n        flag: true\n      }));\n      this.setState(prevState => ({\n        shelfChange: true\n      }));\n      setTimeout(() => {\n        this.setState(currentState => ({\n          shelfChange: false\n        }));\n      }, 500);\n      console.log(currentShelf);\n      console.log(nextShelf);\n    };\n  }\n\n  render() {\n    const {\n      books,\n      onShelfUpdate\n    } = this.props;\n    console.log(books);\n    const {\n      query,\n      flag,\n      shelfChange\n    } = this.state;\n    const showingBooks = query === \"\" ? books : books.filter(b => b.title.toLowerCase().includes(query.toLowerCase()));\n    const showMessage = !flag ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.showErrorMessage,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" the book is already in the selected shelf \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.showMessage,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" the books has been succesfully moved \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.Library,\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          onUpdateQuery: this.updateQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), shelfChange && showMessage, console.log(this.state.shelfChange), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Book Store\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Styles.bookStore,\n          children: showingBooks.map(b => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Book, {\n              onShelfUpdate: onShelfUpdate,\n              cover: `url(${b.imageLinks.thumbnail})`,\n              book: b,\n              onHandleChange: this.checkShelf\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)\n          }, b.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Library;","map":{"version":3,"sources":["/home/Tiresia/React nanoDegree/my-reads/src/Library.js"],"names":["React","Component","Styles","Aux","Search","Book","Button","BooksAPI","render","Library","state","shelfChange","flag","query","updateQuery","setState","trim","clearQuery","checkShelf","currentShelf","nextShelf","setTimeout","currentState","prevState","console","log","books","onShelfUpdate","props","showingBooks","filter","b","title","toLowerCase","includes","showMessage","showErrorMessage","textAlign","bookStore","map","imageLinks","thumbnail","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Styles from \"./css/main.module.css\";\nimport Aux from \"./Aux\";\nimport Search from \"./Search\";\nimport Book from \"./Book\";\nimport Button from \"./Button\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { render } from \"@testing-library/react\";\n\nclass Library extends Component {\n    state = {\n        shelfChange: false,\n        flag: true,\n        query: \"\",\n    };\n\n    updateQuery = (query) => {\n        this.setState(() => ({\n            query: query.trim(),\n        }));\n    };\n\n    clearQuery = () => {\n        this.updateQuery(\"\");\n    };\n\n    checkShelf = (currentShelf, nextShelf) => {\n        currentShelf === nextShelf\n            ? this.setState(() => ({\n                  flag: false,\n              })) &&\n              setTimeout(() => {\n                  this.setState((currentState) => ({\n                      flag: true,\n                  }));\n              }, 1500)\n            : this.setState(() => ({\n                  flag: true,\n              }));\n\n        this.setState((prevState) => ({\n            shelfChange: true,\n        }));\n        setTimeout(() => {\n            this.setState((currentState) => ({\n                shelfChange: false,\n            }));\n        }, 500);\n\n        console.log(currentShelf);\n        console.log(nextShelf);\n    };\n\n    render() {\n        const { books, onShelfUpdate,  } = this.props;\n        console.log(books);\n        const { query, flag, shelfChange } = this.state;\n\n        const showingBooks =\n            query === \"\"\n                ? books\n                : books.filter((b) =>\n                      b.title.toLowerCase().includes(query.toLowerCase())\n                  );\n\n        const showMessage = !flag ? (\n            <div className={Styles.showErrorMessage}>\n                <p> the book is already in the selected shelf </p>\n            </div>\n        ) : (\n            <div className={Styles.showMessage}>\n                <p> the books has been succesfully moved </p>\n            </div>\n        );\n\n        return (\n            <Aux>\n                <div className={Styles.Library}>\n                    <Search onUpdateQuery={this.updateQuery} />\n                    {shelfChange && showMessage}\n\n                    {console.log(this.state.shelfChange)}\n\n                    <h1 style={{ textAlign: \"center\" }}>Book Store</h1>\n                    <div className={Styles.bookStore}>\n                        {showingBooks.map((b) => (\n                            <li key={b.key}>\n                                <Book\n                                    onShelfUpdate={onShelfUpdate}\n                                    cover={`url(${b.imageLinks.thumbnail})`}\n                                    book={b}\n                                    onHandleChange={this.checkShelf}\n                                />\n                            </li>\n                        ))}\n                    </div>\n                </div>\n            </Aux>\n        );\n    }\n}\n\nexport default Library;\n"]},"metadata":{},"sourceType":"module"}