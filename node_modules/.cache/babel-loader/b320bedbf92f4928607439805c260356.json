{"ast":null,"code":"var _jsxFileName = \"/home/Tiresia/React nanoDegree/my-reads/src/Bookshelf.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"./Aux\";\nimport Shelf from \"./Shelf\";\nimport Styles from \"./css/main.module.css\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Search from './Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookShelf = props => {\n  const {\n    query,\n    onUpdateQuery,\n    books,\n    onShelfUpdate\n  } = props;\n  const showingBooks = query === \"\" ? books : books.filter(b => b.title.toLowerCase().includes(query.toLowerCase()));\n  const shelves = [{\n    name: \"Read\",\n    books: showingBooks.filter(b => b.shelf === \"read\")\n  }, {\n    name: \"Current Reading\",\n    books: showingBooks.filter(b => b.shelf === \"currentlyReading\")\n  }, {\n    name: \"Want To Read\",\n    books: showingBooks.filter(b => b.shelf === \"wantToRead\")\n  }];\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: [console.log(books), /*#__PURE__*/_jsxDEV(Search, {\n      onUpdateQuery: onUpdateQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: Styles.bookShelf,\n      children: shelves && shelves.map(s => /*#__PURE__*/_jsxDEV(Shelf, {\n        title: s.name,\n        books: s.books,\n        onShelfUpdate: onShelfUpdate\n      }, s.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this);\n};\n\n_c = BookShelf;\nexport default BookShelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookShelf\");","map":{"version":3,"sources":["/home/Tiresia/React nanoDegree/my-reads/src/Bookshelf.js"],"names":["React","Component","Aux","Shelf","Styles","Book","BooksAPI","Search","BookShelf","props","query","onUpdateQuery","books","onShelfUpdate","showingBooks","filter","b","title","toLowerCase","includes","shelves","name","shelf","console","log","bookShelf","map","s"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,SAAS,GAAGC,KAAD,IAAU;AAMnB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,aAAT;AAAwBC,IAAAA,KAAxB;AAA+BC,IAAAA;AAA/B,MAAgDJ,KAAtD;AACA,QAAMK,YAAY,GACdJ,KAAK,KAAK,EAAV,GACME,KADN,GAEMA,KAAK,CAACG,MAAN,CAAcC,CAAD,IACTA,CAAC,CAACC,KAAF,CAAQC,WAAR,GAAsBC,QAAtB,CAA+BT,KAAK,CAACQ,WAAN,EAA/B,CADJ,CAHV;AAOA,QAAME,OAAO,GAAG,CACZ;AACIC,IAAAA,IAAI,EAAE,MADV;AAEIT,IAAAA,KAAK,EAAEE,YAAY,CAACC,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAACM,KAAF,KAAY,MAAvC;AAFX,GADY,EAKZ;AACID,IAAAA,IAAI,EAAE,iBADV;AAEIT,IAAAA,KAAK,EAAEE,YAAY,CAACC,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAACM,KAAF,KAAY,kBAAvC;AAFX,GALY,EASZ;AACID,IAAAA,IAAI,EAAE,cADV;AAEIT,IAAAA,KAAK,EAAEE,YAAY,CAACC,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAACM,KAAF,KAAY,YAAvC;AAFX,GATY,CAAhB;AAgBA,sBACI,QAAC,GAAD;AAAA,eACKC,OAAO,CAACC,GAAR,CAAYZ,KAAZ,CADL,eAEI,QAAC,MAAD;AAAQ,MAAA,aAAa,EAAED;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAI,MAAA,SAAS,EAAEP,MAAM,CAACqB,SAAtB;AAAA,gBACKL,OAAO,IACJA,OAAO,CAACM,GAAR,CAAaC,CAAD,iBACR,QAAC,KAAD;AAAoB,QAAA,KAAK,EAAEA,CAAC,CAACN,IAA7B;AAAmC,QAAA,KAAK,EAAEM,CAAC,CAACf,KAA5C;AAAmD,QAAA,aAAa,EAAEC;AAAlE,SAAYc,CAAC,CAACN,IAAd;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA3CL;;KAAMb,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from \"./Aux\";\nimport Shelf from \"./Shelf\";\nimport Styles from \"./css/main.module.css\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Search from './Search';\n\nconst BookShelf =(props)=> {\n  \n\n\n \n        \n        const { query, onUpdateQuery, books, onShelfUpdate} = props\n        const showingBooks =\n            query === \"\"\n                ? books\n                : books.filter((b) =>\n                      b.title.toLowerCase().includes(query.toLowerCase())\n                  );\n      \n        const shelves = [\n            {\n                name: \"Read\",\n                books: showingBooks.filter((b) => b.shelf === \"read\"),\n            },\n            {\n                name: \"Current Reading\",\n                books: showingBooks.filter((b) => b.shelf === \"currentlyReading\"),\n            },\n            {\n                name: \"Want To Read\",\n                books: showingBooks.filter((b) => b.shelf === \"wantToRead\"),\n            },\n        ];\n        \n\n        return (\n            <Aux>\n                {console.log(books)}\n                <Search onUpdateQuery={onUpdateQuery} />\n\n                <ul className={Styles.bookShelf}>\n                    {shelves &&\n                        shelves.map((s) => (\n                            <Shelf key={s.name} title={s.name} books={s.books} onShelfUpdate={onShelfUpdate} />\n                        ))}\n                </ul>\n            </Aux>\n        );\n    }\n\n\nexport default BookShelf;\n"]},"metadata":{},"sourceType":"module"}