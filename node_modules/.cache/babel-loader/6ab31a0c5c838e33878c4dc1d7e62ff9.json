{"ast":null,"code":"var _jsxFileName = \"/home/Tiresia/React nanoDegree/my-reads/src/Bookshelf.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"./Aux\";\nimport Shelf from \"./Shelf\";\nimport Styles from \"./css/main.module.css\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BookShelf extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: []\n    };\n\n    this.shelfUpdate = (book, shelfName) => {\n      const {\n        books\n      } = this.state;\n      const updateIndex = books.findIndex(b => b.id === book.id);\n      const updateBook = books[updateIndex];\n      updateBook.shelf = shelfName;\n      console.log(updateIndex, updateBook);\n    };\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll().then(books => this.setState(() => ({\n      books\n    })));\n  }\n\n  render() {\n    const {\n      bookShelf,\n      books\n    } = this.state;\n    const shelves = [{\n      name: \"Read\",\n      books: books.filter(b => b.shelf === \"read\")\n    }, {\n      name: \"Current Reading\",\n      books: books.filter(b => b.shelf === \"currentlyReading\")\n    }, {\n      name: \"Want To Read\",\n      books: books.filter(b => b.shelf === \"wantToRead\")\n    }];\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: Styles.bookShelf,\n        children: shelves && shelves.map((s, index) => /*#__PURE__*/_jsxDEV(Shelf, {\n          title: s.name,\n          books: s.books\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BookShelf;","map":{"version":3,"sources":["/home/Tiresia/React nanoDegree/my-reads/src/Bookshelf.js"],"names":["React","Component","Aux","Shelf","Styles","Book","BooksAPI","BookShelf","state","books","shelfUpdate","book","shelfName","updateIndex","findIndex","b","id","updateBook","shelf","console","log","componentDidMount","getAll","then","setState","render","bookShelf","shelves","name","filter","map","s","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BO,KAD8B,GACtB;AACJC,MAAAA,KAAK,EAAE;AADH,KADsB;;AAAA,SAY9BC,WAZ8B,GAYlB,CAACC,IAAD,EAAOC,SAAP,KAAoB;AAC5B,YAAM;AAACH,QAAAA;AAAD,UAAU,KAAKD,KAArB;AACA,YAAMK,WAAW,GAAGJ,KAAK,CAACK,SAAN,CAAgBC,CAAC,IAAGA,CAAC,CAACC,EAAF,KAASL,IAAI,CAACK,EAAlC,CAApB;AACA,YAAMC,UAAU,GAAER,KAAK,CAACI,WAAD,CAAvB;AACAI,MAAAA,UAAU,CAACC,KAAX,GAAkBN,SAAlB;AAEIO,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ,EAAyBI,UAAzB;AACP,KAnB6B;AAAA;;AAK9BI,EAAAA,iBAAiB,GAAG;AAChBf,IAAAA,QAAQ,CAACgB,MAAT,GAAkBC,IAAlB,CAAwBd,KAAD,IACnB,KAAKe,QAAL,CAAc,OAAO;AACjBf,MAAAA;AADiB,KAAP,CAAd,CADJ;AAKH;;AASDgB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,SAAF;AAAajB,MAAAA;AAAb,QAAuB,KAAKD,KAAlC;AAEA,UAAMmB,OAAO,GAAG,CACZ;AACIC,MAAAA,IAAI,EAAE,MADV;AAEInB,MAAAA,KAAK,EAAEA,KAAK,CAACoB,MAAN,CAAcd,CAAD,IAAOA,CAAC,CAACG,KAAF,KAAY,MAAhC;AAFX,KADY,EAKZ;AACIU,MAAAA,IAAI,EAAE,iBADV;AAEInB,MAAAA,KAAK,EAAEA,KAAK,CAACoB,MAAN,CAAcd,CAAD,IAAOA,CAAC,CAACG,KAAF,KAAY,kBAAhC;AAFX,KALY,EASZ;AACIU,MAAAA,IAAI,EAAE,cADV;AAEInB,MAAAA,KAAK,EAAEA,KAAK,CAACoB,MAAN,CAAcd,CAAD,IAAOA,CAAC,CAACG,KAAF,KAAY,YAAhC;AAFX,KATY,CAAhB;AAeA,wBACI,QAAC,GAAD;AAAA,6BACI;AAAI,QAAA,SAAS,EAAEd,MAAM,CAACsB,SAAtB;AAAA,kBACKC,OAAO,IACJA,OAAO,CAACG,GAAR,CAAY,CAACC,CAAD,EAAIC,KAAJ,kBACR,QAAC,KAAD;AAAmB,UAAA,KAAK,EAAED,CAAC,CAACH,IAA5B;AAAkC,UAAA,KAAK,EAAEG,CAAC,CAACtB;AAA3C,WAAYuB,KAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAhD6B;;AAmDlC,eAAezB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from \"./Aux\";\nimport Shelf from \"./Shelf\";\nimport Styles from \"./css/main.module.css\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nclass BookShelf extends Component {\n    state = {\n        books: [],\n    };\n\n    componentDidMount() {\n        BooksAPI.getAll().then((books) =>\n            this.setState(() => ({\n                books,\n            }))\n        );\n    }\n    shelfUpdate=(book, shelfName) =>{\n        const {books} = this.state;\n        const updateIndex = books.findIndex(b=> b.id === book.id)\n        const updateBook= books[updateIndex]\n        updateBook.shelf= shelfName\n\n            console.log(updateIndex, updateBook)\n    }\n    render() {\n        const { bookShelf, books } = this.state;\n\n        const shelves = [\n            {\n                name: \"Read\",\n                books: books.filter((b) => b.shelf === \"read\"),\n            },\n            {\n                name: \"Current Reading\",\n                books: books.filter((b) => b.shelf === \"currentlyReading\"),\n            },\n            {\n                name: \"Want To Read\",\n                books: books.filter((b) => b.shelf === \"wantToRead\"),\n            },\n        ];\n\n        return (\n            <Aux>\n                <ul className={Styles.bookShelf}>\n                    {shelves &&\n                        shelves.map((s, index) => (\n                            <Shelf key={index} title={s.name} books={s.books} />\n                        ))}\n                </ul>\n            </Aux>\n        );\n    }\n}\n\nexport default BookShelf;\n"]},"metadata":{},"sourceType":"module"}