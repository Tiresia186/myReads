{"ast":null,"code":"var _jsxFileName = \"/home/Tiresia/React nanoDegree/my-reads/src/Library.js\";\nimport React, { Component } from \"react\";\nimport Styles from \"./css/main.module.css\";\nimport Aux from \"./Aux\";\nimport Search from \"./Search\";\nimport Book from \"./Book\";\nimport Button from \"./Button\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { render } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Library extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      shelfChange: false,\n      books: []\n    };\n\n    this.showMessageHandler = prevState => {\n      this.setState(prevState => ({\n        shelfChange: !prevState.shelfChange\n      }));\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    BooksAPI.getAll().then(books => this.setState(() => ({\n      books\n    })));\n  }\n\n  render() {\n    const {\n      books,\n      query,\n      onShelfUpdate,\n      onUpdateQuery\n    } = this.props;\n    console.log(books);\n    let flag = true;\n    const showingBooks = query === \"\" ? books : books.filter(b => b.title.toLowerCase().includes(query.toLowerCase()));\n\n    const showMessage = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.showMessage,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" the books has been succesfully moved \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.Library,\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          onUpdateQuery: onUpdateQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), flag == this.state.shelfChange && showMessage, setTimeout(() => {\n          !flag;\n        }, 2000), console.log(this.state.shelfChange), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Book Store\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Styles.bookStore,\n          children: showingBooks.map(b => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Book, {\n              onShelfUpdate: onShelfUpdate,\n              cover: `url(${b.imageLinks.thumbnail})`,\n              book: b,\n              shelfChange: this.showMessageHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this)\n          }, b.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Library;","map":{"version":3,"sources":["/home/Tiresia/React nanoDegree/my-reads/src/Library.js"],"names":["React","Component","Styles","Aux","Search","Book","Button","BooksAPI","render","Library","state","shelfChange","books","showMessageHandler","prevState","setState","componentDidMount","console","log","getAll","then","query","onShelfUpdate","onUpdateQuery","props","flag","showingBooks","filter","b","title","toLowerCase","includes","showMessage","setTimeout","textAlign","bookStore","map","imageLinks","thumbnail","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Styles from \"./css/main.module.css\";\nimport Aux from \"./Aux\";\nimport Search from \"./Search\";\nimport Book from \"./Book\";\nimport Button from \"./Button\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { render } from \"@testing-library/react\";\n\nclass Library extends Component {\n    state = {\n        shelfChange: false,\n        books: [],\n    };\n\n    componentDidMount() {\n        console.log(\"componentDidMount\");\n        BooksAPI.getAll().then((books) =>\n            this.setState(() => ({\n                books,\n            }))\n        );\n    }\n\n    showMessageHandler = (prevState) => {\n        this.setState((prevState) => ({\n            shelfChange: !prevState.shelfChange,\n        }));\n    };\n\n    render() {\n        const { books, query, onShelfUpdate, onUpdateQuery } = this.props;\n        console.log(books);\n        let flag = true;\n\n        const showingBooks =\n            query === \"\"\n                ? books\n                : books.filter((b) =>\n                      b.title.toLowerCase().includes(query.toLowerCase())\n                  );\n        const showMessage = (\n            <div className={Styles.showMessage}>\n                <p> the books has been succesfully moved </p>\n            </div>\n        );\n\n        return (\n            <Aux>\n                <div className={Styles.Library}>\n                    <Search onUpdateQuery={onUpdateQuery} />\n                    {\n                        flag == this.state.shelfChange && showMessage\n                       \n                    }\n\n                    { setTimeout(()=>{!flag},2000)}\n\n                    {console.log(this.state.shelfChange)}\n\n                    <h1 style={{ textAlign: \"center\" }}>Book Store</h1>\n                    <div className={Styles.bookStore}>\n                        {showingBooks.map((b) => (\n                            <li key={b.key}>\n                                <Book\n                                    onShelfUpdate={onShelfUpdate}\n                                    cover={`url(${b.imageLinks.thumbnail})`}\n                                    book={b}\n                                    shelfChange={this.showMessageHandler}\n                                />\n                            </li>\n                        ))}\n                    </div>\n                </div>\n            </Aux>\n        );\n    }\n}\n\nexport default Library;\n"]},"metadata":{},"sourceType":"module"}